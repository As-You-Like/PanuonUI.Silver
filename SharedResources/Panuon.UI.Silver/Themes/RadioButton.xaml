<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonStandardTemplate}"
                     TargetType="RadioButton">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:RadioButtonHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                  Width="{Binding Path=(local:RadioButtonHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Border x:Name="BdrBoxBorder"
                        Opacity="0.6"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Border x:Name="BdrBoxFill"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Border x:Name="BrdBoxNull"
                        Background="{Binding Path=(local:RadioButtonHelper.NullableGlyphBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Height="{Binding Path=(local:RadioButtonHelper.BoxHeight), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Width="{Binding Path=(local:RadioButtonHelper.BoxWidth), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Visibility="Collapsed" />
                <TextBlock x:Name="TxtGlyph"
                           Text="&#xe92e;"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon"
                           Foreground="{Binding Path=(local:RadioButtonHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           FontSize="{Binding Path=(local:RadioButtonHelper.BoxWidth), Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=3, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid>
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="False" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="False" />
                    <Condition Property="IsChecked"
                               Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBoxBorder"
                        Property="Opacity"
                        Value="0.6" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBoxBorder"
                        Property="Opacity"
                        Value="0.6" />
            </MultiTrigger>
            <Trigger Property="IsChecked"
                     Value="{x:Null}">
                <Setter TargetName="BrdBoxNull"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonSwitchTemplate}"
                     TargetType="RadioButton">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:RadioButtonHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                  Width="{Binding Path=(local:RadioButtonHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Border  CornerRadius="{Binding ActualHeight, Converter={StaticResource {x:Static irs:Converters.RoundCornerConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Background="{Binding Path=(local:RadioButtonHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Rectangle RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RenderTransformOrigin="0.5,0.5"
                               Fill="{TemplateBinding Background}">
                        <Rectangle.RenderTransform>
                            <ScaleTransform x:Name="ScaleBoxBack"
                                            ScaleX="1"
                                            ScaleY="1" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </Border>
                <Rectangle x:Name="RectToggle"
                           Stroke="Transparent"
                           Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                           RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                           RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                           HorizontalAlignment="Right"
                           Fill="{Binding Path=(local:RadioButtonHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:Converters.CheckBoxSwitchToggleMarginConverter}}">
                            <Binding Path="(local:RadioButtonHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Rectangle.Margin>
                    <Rectangle.Effect>
                        <DropShadowEffect Color="DimGray"
                                          Opacity="0.4"
                                          BlurRadius="3"
                                          ShadowDepth="1"
                                          Direction="275" />
                    </Rectangle.Effect>
                </Rectangle>
            </Grid>
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="RectToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             To="0"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             To="0"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="RectToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonSwitch2Template}"
                     TargetType="RadioButton">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:RadioButtonHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                  Width="{Binding Path=(local:RadioButtonHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Border x:Name="BdrMain"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Background="{Binding Path=(local:RadioButtonHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Border x:Name="RectBoxBack"
                            CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               RenderTransformOrigin="0.5,0.5"
                               Background="{TemplateBinding Background}">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ScaleBoxBack"
                                            ScaleX="1"
                                            ScaleY="1" />
                        </Border.RenderTransform>
                    </Border>
                </Border>
                <Rectangle HorizontalAlignment="Left"
                           Fill="{Binding Path=(local:RadioButtonHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           Width="3"
                           Margin="{Binding ActualHeight, Converter={StaticResource {x:Static irs:Converters.CheckBoxSwitch2DecorationMarginConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                <Border x:Name="BdrToggle"
                           BorderBrush="Transparent"
                           Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        HorizontalAlignment="Right"
                           Background="{Binding Path=(local:RadioButtonHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Border.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static irs:Converters.CheckBoxSwitchToggleMarginConverter}}">
                            <Binding Path="(local:RadioButtonHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource TemplatedParent}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Border.Margin>
                    <Border.Effect>
                        <DropShadowEffect Color="DimGray"
                                          Opacity="0.4"
                                          BlurRadius="3"
                                          ShadowDepth="1"
                                          Direction="275" />
                    </Border.Effect>
                </Border>
            </Grid>
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="BdrToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             To="0"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             To="0"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="BdrToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonSwitch3Template}"
                     TargetType="RadioButton">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:RadioButtonHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                  Width="{Binding Path=(local:RadioButtonHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Border x:Name="BdrMain"
                        CornerRadius="{Binding ActualHeight, Converter={StaticResource {x:Static irs:Converters.RoundCornerConverter}}, RelativeSource={RelativeSource Self}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Background="{TemplateBinding Background}">
                    <Rectangle x:Name="RectBoxBack"
                               RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RenderTransformOrigin="0.5,0.5"
                               Fill="{Binding Path=(local:RadioButtonHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Opacity="0" />
                </Border>
                <Border x:Name="BdrToggleTrack"
                        Margin="{Binding Path=(local:RadioButtonHelper.BoxHeight),Converter={StaticResource {x:Static irs:Converters.CheckBoxSwitch3ToggleTrackMarginConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                    <Rectangle x:Name="EllToggle"
                               Stroke="Transparent"
                               Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               HorizontalAlignment="Right"
                               Fill="{Binding Path=(local:RadioButtonHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <Rectangle.Margin>
                            <MultiBinding Converter="{StaticResource {x:Static irs:Converters.CheckBoxSwitch3ToggleMarginConverter}}">
                                <Binding Path="ActualWidth"
                                         ElementName="BdrToggleTrack"
                                         Mode="OneWay" />
                                <Binding Path="ActualWidth"
                                         RelativeSource="{RelativeSource Self}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Rectangle.Margin>
                    </Rectangle>
                </Border>
            </Grid>
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="RectBoxBack"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="RectBoxBack"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonButtonTemplate}"
                     TargetType="RadioButton">
        <Grid Background="Transparent">
            <Border x:Name="BdrBack"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Border x:Name="BdrChecked"
                       Background="{Binding Path=(local:RadioButtonHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                       Opacity="0" />
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.8"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.2"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="BdrChecked"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.RadioButtonSelectorTemplate}"
                     TargetType="RadioButton">
        <Grid Background="Transparent">
            <ContentPresenter x:Name="CpContent"
                              RecognizesAccessKey="True"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{Binding Path=(local:RadioButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Border Background="{TemplateBinding Background}"
                    Height="{Binding Path=(local:RadioButtonHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Width="{Binding Path=(local:RadioButtonHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Right">
                <TextBlock x:Name="TxtCheckIcon"
                           Text="&#xe92e;"
                           Foreground="{Binding Path=(local:RadioButtonHelper.GlyphBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           FontSize="{Binding Path=(local:RadioButtonHelper.BoxHeight), Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center" />
            </Border>
            
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="RadioButton">
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Style.Triggers>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Standard">
                <Setter Property="BorderBrush"
                        Value="LightGray" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="local:RadioButtonHelper.NullableGlyphBrush"
                        Value="#888888" />
                <Setter Property="local:RadioButtonHelper.CheckedGlyphBrush"
                        Value="#888888" />
                <Setter Property="local:RadioButtonHelper.BoxHeight"
                        Value="16" />
                <Setter Property="local:RadioButtonHelper.BoxWidth"
                        Value="16" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonStandardTemplate}}" />
            </Trigger>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="local:RadioButtonHelper.BoxHeight"
                        Value="20" />
                <Setter Property="local:RadioButtonHelper.BoxWidth"
                        Value="30" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.GlyphBrush"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.CheckedBackground"
                        Value="#AAAAAA" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonSwitchTemplate}}" />
            </Trigger>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Switch2">
                <Setter Property="BorderBrush"
                        Value="LightGray" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="local:RadioButtonHelper.BoxHeight"
                        Value="20" />
                <Setter Property="local:RadioButtonHelper.BoxWidth"
                        Value="40" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.GlyphBrush"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.CheckedBackground"
                        Value="#AAAAAA" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonSwitch2Template}}" />
            </Trigger>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Switch3">
                <Setter Property="BorderBrush"
                        Value="LightGray" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="local:RadioButtonHelper.BoxHeight"
                        Value="16" />
                <Setter Property="local:RadioButtonHelper.BoxWidth"
                        Value="30" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.GlyphBrush"
                        Value="LightGray" />
                <Setter Property="local:RadioButtonHelper.CheckedGlyphBrush"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.CheckedBackground"
                        Value="#AAAAAA" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonSwitch3Template}}" />
            </Trigger>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Button">
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="local:RadioButtonHelper.CheckedBackground"
                        Value="#EAEAEA" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonButtonTemplate}}" />
            </Trigger>
            <Trigger Property="local:RadioButtonHelper.RadioButtonStyle"
                     Value="Selector">
                <Setter Property="local:RadioButtonHelper.BoxHeight"
                        Value="10" />
                <Setter Property="local:RadioButtonHelper.BoxWidth"
                        Value="10" />
                <Setter Property="BorderThickness"
                        Value="1.5" />
                <Setter Property="BorderBrush"
                        Value="LightGray" />
                <Setter Property="Background"
                        Value="LightGray" />
                <Setter Property="local:RadioButtonHelper.GlyphBrush"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.CheckedGlyphBrush"
                        Value="White" />
                <Setter Property="local:RadioButtonHelper.CheckedBorderBrush"
                        Value="#888888" />
                <Setter Property="local:RadioButtonHelper.CheckedBackground"
                        Value="#888888" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:ResourceKeys.RadioButtonSelectorTemplate}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self},Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedGlyphBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="local:RadioButtonHelper.GlyphBrush"
                         Value="{Binding Path=(local:RadioButtonHelper.CheckedGlyphBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedForeground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="Foreground"
                         Value="{Binding Path=(local:RadioButtonHelper.CheckedForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter  Property="Background"
                         Value="{Binding Path=(local:RadioButtonHelper.CheckedBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self},Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedBorderBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
          
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>
